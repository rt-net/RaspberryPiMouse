name: CI

on:
  push:
    branches:
      - master
    paths:
    - 'src/drivers/**'
    - '.github/workflows/**'
  pull_request:
    types: [opened, synchronize]
    paths:
    - 'src/drivers/**'
    - '.github/workflows/**'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        env:
          - { RPI_LINUX_VER: rpi-4.1.y, CONFIG_FILE: config-4.1.21-v7+, RPI_LINUX_COMMIT_HASH: ff45bc0, GCC_VER: 4.8 }
          - { RPI_LINUX_VER: rpi-4.4.y, CONFIG_FILE: config-4.4.38-v7+, RPI_LINUX_COMMIT_HASH: c95b7f1, GCC_VER: 4.8 }
          - { RPI_LINUX_VER: rpi-4.14.y, CONFIG_FILE: config-4.14.34-v7+, RPI_LINUX_COMMIT_HASH: f70eae4, GCC_VER: 4.8 }
          - { RPI_LINUX_VER: rpi-5.4.y, CONFIG_FILE: config-5.4.83-v7+, RPI_LINUX_COMMIT_HASH: 76c49e6, GCC_VER: 6.3 }
          - { RPI_LINUX_VER: rpi-5.4.y, CONFIG_FILE: config-5.4.83-v7+, RPI_LINUX_COMMIT_HASH: 76c49e6, GCC_VER: 8.3 }
          - { RPI_LINUX_VER: rpi-5.10.y, CONFIG_FILE: config-5.10.11-v7+, RPI_LINUX_COMMIT_HASH: 6af8ae3, GCC_VER: 6.3 }
          - { RPI_LINUX_VER: rpi-5.10.y, CONFIG_FILE: config-5.10.11-v7+, RPI_LINUX_COMMIT_HASH: 6af8ae3, GCC_VER: 8.3 }
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run test script
        env:
          RPI_LINUX_VER: ${{ matrix.env.RPI_LINUX_VER }}
          CONFIG_FILE: ${{ matrix.env.CONFIG_FILE }}
          RPI_LINUX_COMMIT_HASH: ${{ matrix.env.RPI_LINUX_COMMIT_HASH }}
          GCC_VER: ${{ matrix.env.GCC_VER }}
        run: |
          bash ${GITHUB_WORKSPACE}/.test/test.sh ${GITHUB_WORKSPACE} ${RPI_LINUX_VER} ${CONFIG_FILE} ${RPI_LINUX_COMMIT_HASH} ${GCC_VER}
      # - name: Install cross-build settings
      #   id: gcc
      #   env:
      #     GCC_VER: ${{ matrix.env.GCC_VER }}
      #   run: |
      #     mkdir -p ${HOME}/repo/raspberrypi
      #     if [ "${GCC_VER}" = "4.8" ]; then
      #       if [ -e ${HOME}/repo/raspberrypi/tools ]; then (cd ${HOME}/repo/raspberrypi/tools && git pull); else (cd ${HOME}/repo/raspberrypi && git clone --depth 1 https://github.com/raspberrypi/tools.git); fi
      #       echo "::set-output name=path::${HOME}/repo/raspberrypi/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/arm-linux-gnueabihf-"
      #     fi
      #     if [ "${GCC_VER}" = "6.3" ]; then
      #       if [ ! -e ${HOME}/repo/raspberrypi/cross-pi-gcc-6.3.0-2 ]; then
      #         cd ${HOME}/repo/raspberrypi/
      #         if [ ! -e ${HOME}/repo/raspberrypi/cross-gcc-6.3.0-pi_3+.tar.gz ]; then
      #           wget --content-disposition "https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Stretch/GCC%206.3.0/Raspberry%20Pi%203A%2B%2C%203B%2B%2C%204/cross-gcc-6.3.0-pi_3%2B.tar.gz"
      #         fi
      #         tar xvf cross-gcc-6.3.0-pi_3+.tar.gz
      #       fi
      #       echo "::set-output name=path::${HOME}/repo/raspberrypi/cross-pi-gcc-6.3.0-2/bin/arm-linux-gnueabihf-"
      #     fi
      #     if [ "${GCC_VER}" = "8.3" ]; then
      #       if [ ! -e ${HOME}/repo/raspberrypi/cross-pi-gcc-8.3.0-2 ]; then
      #         cd ${HOME}/repo/raspberrypi/
      #         if [ ! -e ${HOME}/repo/raspberrypi/cross-gcc-8.3.0-pi_3+.tar.gz ]; then
      #           wget --content-disposition "https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Buster/GCC%208.3.0/Raspberry%20Pi%203A%2B%2C%203B%2B%2C%204/cross-gcc-8.3.0-pi_3%2B.tar.gz"
      #         fi
      #         tar xvf cross-gcc-8.3.0-pi_3+.tar.gz
      #       fi
      #       echo "::set-output name=path::${HOME}/repo/raspberrypi/cross-pi-gcc-8.3.0-2/bin/arm-linux-gnueabihf-"
      #     fi

      # - name: Install kernel headers
      #   env:
      #     RPI_LINUX_VER: ${{ matrix.env.RPI_LINUX_VER }}
      #     CONFIG_FILE: ${{ matrix.env.CONFIG_FILE }}
      #     RPI_LINUX_COMMIT_HASH: ${{ matrix.env.RPI_LINUX_COMMIT_HASH }}
      #     GCC_VER: ${{ matrix.env.GCC_VER }}
      #     CROSS_COMPILE_PATH: ${{ steps.gcc.outputs.path }}
      #   run: |
      #     if [ -e ${HOME}/repo/raspberrypi/linux ]; then (cd ${HOME}/repo/raspberrypi/linux && git fetch origin && git checkout ${RPI_LINUX_VER} && git pull); else (cd ${HOME}/repo/raspberrypi && git clone -b ${RPI_LINUX_VER} https://github.com/raspberrypi/linux.git); fi
      #     cd ${HOME}/repo/raspberrypi/linux && make clean && git reset --hard HEAD && git checkout ${RPI_LINUX_COMMIT_HASH}
      #     cp "${GITHUB_WORKSPACE}/.test/${CONFIG_FILE}" ${HOME}/repo/raspberrypi/linux/.config
      #     make CROSS_COMPILE=${CROSS_COMPILE_PATH} ARCH=arm oldconfig
      #     make CROSS_COMPILE=${CROSS_COMPILE_PATH} ARCH=arm -j 8

      # - name: Build kernel module
      #   env:
      #     CROSS_COMPILE_PATH: ${{ steps.gcc.outputs.path }}
      #   run: |
      #     cd ${GITHUB_WORKSPACE}/src/drivers
      #     make CROSS_COMPILE=${CROSS_COMPILE_PATH} -f ${GITHUB_WORKSPACE}/.test/Makefile.crosscompile

      # - name: Output kernel module info
      #   run: |
      #     uname -a
      #     echo ${{ matrix.env.RPI_LINUX_VER }} ${{ matrix.env.CONFIG_FILE }} ${{ matrix.env.RPI_LINUX_COMMIT_HASH }}
      #     echo ${{ steps.gcc.outputs.path }}
      #     cd ${GITHUB_WORKSPACE}/src/drivers
      #     modinfo rtmouse.ko

      # - name: Clean up kernel module
      #   run: |
      #     cd ${GITHUB_WORKSPACE}/src/drivers
      #     make -f ${GITHUB_WORKSPACE}/.test/Makefile.crosscompile clean
